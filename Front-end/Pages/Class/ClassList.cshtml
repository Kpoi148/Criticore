@page
@model Front_end.Pages.Class.ClassListModel
@{
    ViewData["Title"] = "Criticore - Join a Class";
    Layout = "~/Pages/Shared/_Sidebar.cshtml";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    @* <link rel="icon" type="image/png" href="~/images/Logo-Criticore.png" /> *@
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>
</head>
<body class="bg-gray-50 text-gray-800 antialiased">
    <div class="flex min-h-screen">
        <main class="flex-1 p-6 sm:p-8">
            <div class="max-w-7xl mx-auto">

                <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mb-2">
                    <h1 class="text-3xl font-bold mb-2 text-blue-700">
                        Join a Class
                    </h1>
                    <div class="flex gap-3">
                        <button onclick="openJoinClassModal()"
                                class="flex items-center space-x-2 bg-indigo-600 text-white px-5 py-2.5 rounded-xl text-lg font-semibold hover:bg-indigo-700 transition duration-200 shadow-md">
                            <i class="bi bi-person-fill-add"></i>
                            <span>Join by Code</span>
                        </button>
                        <button onclick="openModal()"
                                class="flex items-center space-x-2 bg-green-600 text-white px-5 py-2.5 rounded-xl text-lg font-semibold hover:bg-green-700 transition duration-200 shadow-md">
                            <i class="bi bi-plus-circle-fill"></i>
                            <span>Create New Class</span>
                        </button>
                    </div>
                </div>

                <div class="flex flex-col sm:flex-row justify-between items-start sm:items-center mt-4 mb-2">
                    <input id="searchInput" type="text" placeholder="Search classes, subjects, or teachers..."
                           class="flex-1 min-w-[250px] border border-gray-300 rounded-xl px-4 py-2.5 text-base shadow-inner focus:ring-blue-500 focus:border-blue-500 transition" />

                    <select id="semesterFilter" class="border border-gray-300 rounded-xl px-4 py-2.5 text-base focus:ring-blue-500 focus:border-blue-500 transition lg:w-48">
                        <option value="All">All Semesters</option>
                        @foreach (var semester in Model.Classes.Select(c => c.Semester).Distinct().Where(s => !string.IsNullOrEmpty(s)))
                        {
                            <option value="@semester">@semester</option>
                        }
                    </select>

                    <div class="flex flex-wrap gap-2 lg:ml-auto">
                        <button class="filter-btn px-4 py-2 rounded-xl text-sm font-medium transition duration-150 bg-blue-600 text-white" data-status="All">All</button>
                        <button class="filter-btn px-4 py-2 rounded-xl text-sm font-medium transition duration-150 bg-gray-200 text-gray-700 hover:bg-gray-300" data-status="In Progress">In Progress</button>
                        <button class="filter-btn px-4 py-2 rounded-xl text-sm font-medium transition duration-150 bg-gray-200 text-gray-700 hover:bg-gray-300" data-status="Not Started">Not Started</button>
                        <button class="filter-btn px-4 py-2 rounded-xl text-sm font-medium transition duration-150 bg-gray-200 text-gray-700 hover:bg-gray-300" data-status="Completed">Completed</button>
                    </div>
                </div>


                <div id="classList" class="grid gap-8 grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4">
                </div>
            </div>
        </main>
    </div>
    <!-- Modal nhập mã vào lớp học -->
    <div id="joinClassModal" class="fixed inset-0 bg-black bg-opacity-50 hidden items-center justify-center z-50">
        <div class="bg-white rounded-lg p-6 w-full max-w-md">
            <h2 class="text-xl font-bold mb-4">Join a Class by Code</h2>
            <form method="post" asp-page-handler="Join">
                <input asp-for="JoinCode" placeholder="Enter class code"
                       class="w-full border px-3 py-2 mb-3 rounded-md" />
                <span asp-validation-for="JoinCode" class="text-red-500"></span>
                <div class="flex justify-end gap-2">
                    <button type="button" onclick="closeJoinClassModal()" class="px-4 py-2 bg-gray-300 rounded-md">Cancel</button>
                    <button type="submit" class="px-4 py-2 bg-green-600 text-white rounded-md">Join</button>
                </div>
            </form>
        </div>
    </div>
    <!-- Modal tạo lớp -->
    <div id="createModal"
         class="fixed inset-0 bg-black bg-opacity-50 hidden justify-center items-center z-50">
        <div class="bg-white rounded-2xl shadow-lg w-full max-w-2xl mx-4 animate-fade-in">
            <div class="flex justify-between items-center border-b px-6 py-4">
                <h2 class="text-2xl font-bold text-green-600">Create New Class</h2>
                <button onclick="closeModal()" class="text-gray-400 hover:text-gray-600 text-2xl">&times;</button>
            </div>

            <form method="post" asp-page-handler="Create" class="p-6 space-y-4">
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Class Name</label>
                        <input name="ClassInput.ClassName" class="mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:ring-green-500 focus:border-green-500" placeholder="e.g., Programming Techniques" required />
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Subject Code</label>
                        <input name="ClassInput.SubjectCode" class="mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:ring-green-500 focus:border-green-500" placeholder="e.g., IT001" required />
                    </div>
                </div>

                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Semester</label>
                        <input name="ClassInput.Semester" class="mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:ring-green-500 focus:border-green-500" placeholder="e.g., 2025-2026/1" />
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700">Join Code</label>
                        <input name="ClassInput.JoinCode" class="mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:ring-green-500 focus:border-green-500" placeholder="e.g., ABC-123" />
                    </div>
                </div>

                <input type="hidden" name="ClassInput.Status" value="Active" />

                <div>
                    <label class="block text-sm font-medium text-gray-700">Description</label>
                    <textarea name="ClassInput.Description" rows="3"
                              class="mt-1 block w-full rounded-lg border-gray-300 shadow-sm focus:ring-green-500 focus:border-green-500"
                              placeholder="Briefly describe the class..."></textarea>
                </div>

                <div class="flex justify-end pt-4 space-x-3">
                    <button type="button" onclick="closeModal()"
                            class="px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-100">
                        Cancel
                    </button>
                    <button type="submit"
                            class="px-5 py-2 bg-green-600 text-white font-semibold rounded-lg hover:bg-green-700 shadow">
                        <i class="bi bi-check-circle me-2"></i>Create
                    </button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Lưu token từ URL ngay khi load trang
        window.addEventListener('load', () => {
            const urlParams = new URLSearchParams(window.location.search);
            const token = urlParams.get('token');
            if (token) {
                sessionStorage.setItem('authToken', token);
                console.log('✅ Token lưu thành công:', token.substring(0, 20) + '...');
                window.history.replaceState({}, '', window.location.pathname);
            } else {
                console.log('❌ Không có token trong URL');
            }
            const storedToken = sessionStorage.getItem('authToken');
            if (storedToken) {
                console.log('✅ Session OK');
            } else {
                console.log('❌ Chưa có session, redirect login');
                // window.location.href = '/auth/login';
            }
        });
        let classes = @Html.Raw(Json.Serialize(Model.Classes)); // Chuyển data sang JS
        let currentStatus = "All";
        let currentSemester = "All";
        let currentSearch = ""; // Biến lưu giá trị tìm kiếm
        window.topicCounts = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.TopicCounts));
        function renderClasses() {
            const container = document.getElementById("classList");
            container.innerHTML = "";
            let filtered = classes.filter((cls) => {
                const matchStatus = currentStatus === "All" || cls.status === currentStatus;
                const matchSemester = currentSemester === "All" || cls.semester === currentSemester;
                const searchText = currentSearch.toLowerCase();
                const matchSearch = !searchText ||
                    (cls.className && cls.className.toLowerCase().includes(searchText)) ||
                    (cls.subjectCode && cls.subjectCode.toLowerCase().includes(searchText)) ||
                    (cls.teacher && cls.teacher.toLowerCase().includes(searchText));
                return matchStatus && matchSemester && matchSearch;
            });
            if (filtered.length === 0) {
                // Đổi class container để căn giữa toàn bộ main khi không có kết quả
                container.className = "flex justify-center items-center min-h-[calc(100vh-200px)] w-full";
                container.innerHTML = `
                    <div class="text-center text-gray-400 p-4">
                        <p class="text-lg font-medium text-gray-500">Không tìm thấy lớp học nào phù hợp với tiêu chí tìm kiếm của bạn.</p>
                    </div>
                `;
            } else {
                // Đổi class về grid khi có kết quả
                container.className = "grid gap-6 grid-cols-1 md:grid-cols-2 lg:grid-cols-3";
                filtered.forEach((cls) => {
                    const card = document.createElement("div");
                    card.innerHTML = `
                        <div class="relative bg-gradient-to-r from-white to-blue-100 border border-blue-200 rounded-lg shadow p-3 h-full flex flex-col justify-between transition hover:shadow-lg">
                            <div class="absolute top-3 right-3 bg-blue-600 text-white text-base px-2 py-1 rounded-full">${cls.status}</div>
                            <!-- Tiêu đề và Class ID -->
                            <div class="mb-3">
                                <h2 class="text-lg font-semibold text-gray-900">${cls.className}</h2>
                                <p class="text-sm text-gray-500">Class ID: <span class="text-gray-800">${cls.classId} • ${cls.subjectCode}</span></p>
                            </div>
                            <!-- Thông tin chi tiết -->
                            <ul class="text-sm text-gray-700 space-y-1 mb-4">
                                <li class="flex items-center gap-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M4.26 10.147a60.438 60.438 0 0 0-.491 6.347A48.62 48.62 0 0 1 12 20.904a48.62 48.62 0 0 1 8.232-4.41 60.46 60.46 0 0 0-.491-6.347m-15.482 0a50.636 50.636 0 0 0-2.658-.813A59.906 59.906 0 0 1 12 3.493a59.903 59.903 0 0 1 10.399 5.84c-.896.248-1.783.52-2.658.814m-15.482 0A50.717 50.717 0 0 1 12 13.489a50.702 50.702 0 0 1 7.74-3.342M6.75 15a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm0 0v-3.675A55.378 55.378 0 0 1 12 8.443m-7.007 11.55A5.981 5.981 0 0 0 6.75 15.75v-1.5" />
                                    </svg>
                                    Teacher: ${cls.teacher || 'Unknown'}</li>
                                <li class="flex items-center gap-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M18 18.72a9.094 9.094 0 0 0 3.741-.479 3 3 0 0 0-4.682-2.72m.94 3.198.001.031c0 .225-.012.447-.037.666A11.944 11.944 0 0 1 12 21c-2.17 0-4.207-.576-5.963-1.584A6.062 6.062 0 0 1 6 18.719m12 0a5.971 5.971 0 0 0-.941-3.197m0 0A5.995 5.995 0 0 0 12 12.75a5.995 5.995 0 0 0-5.058 2.772m0 0a3 3 0 0 0-4.681 2.72 8.986 8.986 0 0 0 3.74.477m.94-3.197a5.971 5.971 0 0 0-.94 3.197M15 6.75a3 3 0 1 1-6 0 3 3 0 0 1 6 0Zm6 3a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Zm-13.5 0a2.25 2.25 0 1 1-4.5 0 2.25 2.25 0 0 1 4.5 0Z" />
                                    </svg>
                                    ${cls.memberCount}/70 members</li>
                                <li class="flex items-center gap-2">
                                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                                        <path stroke-linecap="round" stroke-linejoin="round" d="M6.75 2.994v2.25m10.5-2.25v2.25m-14.252 13.5V7.491a2.25 2.25 0 0 1 2.25-2.25h13.5a2.25 2.25 0 0 1 2.25 2.25v11.251m-18 0a2.25 2.25 0 0 0 2.25 2.25h13.5a2.25 2.25 0 0 0 2.25-2.25m-18 0v-7.5a2.25 2.25 0 0 1 2.25-2.25h13.5a2.25 2.25 0 0 1 2.25 2.25v7.5m-6.75-6h2.25m-9 2.25h4.5m.002-2.25h.005v.006H12v-.006Zm-.001 4.5h.006v.006h-.006v-.005Zm-2.25.001h.005v.006H9.75v-.006Zm-2.25 0h.005v.005h-.006v-.005Zm6.75-2.247h.005v.005h-.005v-.005Zm0 2.247h.006v.006h-.006v-.006Zm2.25-2.248h.006V15H16.5v-.005Z" />
                                    </svg>
                                    ${cls.semester}</li>
                            </ul>
                            <div class="mt-4 flex justify-between items-center">
                                    <span class="text-base text-black-500">${window.topicCounts[cls.classId] ?? 0} topics available</span>
                                <button onclick="goToClass('${cls.classId}')" class="bg-blue-600 text-white px-4 py-2 rounded-md text-base hover:bg-blue-700 transition">Join Class</button>
                            </div>
                        </div>
                    `;
                    container.appendChild(card);
                });
            }
        }
        function goToClass(classId) {
            window.location.href = `/Class/ClassDetail?id=${classId}`;
        }
        // Lắng nghe sự kiện lọc theo trạng thái
        document.querySelectorAll(".filter-btn").forEach((btn) => {
            btn.addEventListener("click", () => {
                currentStatus = btn.getAttribute("data-status");
                document.querySelectorAll(".filter-btn").forEach((b) => b.classList.remove("bg-blue-100", "text-blue-700"));
                btn.classList.add("bg-blue-100", "text-blue-700");
                renderClasses();
            });
        });
        // Lắng nghe sự kiện lọc theo học kỳ
        document.getElementById("semesterFilter").addEventListener("change", (e) => {
            currentSemester = e.target.value;
            renderClasses();
        });
        // Lắng nghe sự kiện tìm kiếm (thời gian thực khi gõ)
        document.getElementById("searchInput").addEventListener("input", (e) => {
            currentSearch = e.target.value.trim().toLowerCase();
            renderClasses();
        });
        renderClasses();
        // Đóng mở modal
        function openJoinClassModal() {
            document.getElementById("joinClassModal").classList.remove("hidden");
            document.getElementById("joinClassModal").classList.add("flex");
        }
        function closeJoinClassModal() {
            document.getElementById("joinClassModal").classList.add("hidden");
            document.getElementById("joinClassModal").classList.remove("flex");
        }
        function openModal() {
            document.getElementById('createModal').classList.remove('hidden');
            document.getElementById('createModal').classList.add('flex');
        }
        function closeModal() {
            document.getElementById('createModal').classList.add('hidden');
            document.getElementById('createModal').classList.remove('flex');
        }
        async function logout() {
            await fetch('/api/logout', { method: 'POST' });
            sessionStorage.removeItem('authToken');
            window.location.href = "https://criticore.edu.vn:8386";
        }
    </script>
</body>
</html>
@section Scripts {
    <script src="~/js/userHub.js"></script>
}